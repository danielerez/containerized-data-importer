// Code generated by swagger-doc. DO NOT EDIT.

package v1alpha1

func (VolumeSnapshot) SwaggerDoc() map[string]string {
	return map[string]string{
		"":       "VolumeSnapshot is a user's request for taking a snapshot. Upon successful creation of the actual\nsnapshot by the volume provider it is bound to the corresponding VolumeSnapshotContent.\nOnly the VolumeSnapshot object is accessible to the user in the namespace.",
		"spec":   "Spec defines the desired characteristics of a snapshot requested by a user.",
		"status": "Status represents the latest observed state of the snapshot\n+optional",
	}
}

func (VolumeSnapshotList) SwaggerDoc() map[string]string {
	return map[string]string{
		"":      "VolumeSnapshotList is a list of VolumeSnapshot objects",
		"items": "Items is the list of VolumeSnapshots",
	}
}

func (VolumeSnapshotSpec) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                    "VolumeSnapshotSpec describes the common attributes of a volume snapshot",
		"source":              "Source has the information about where the snapshot is created from.\nIn Alpha version, only PersistentVolumeClaim is supported as the source.\nIf not specified, user can create VolumeSnapshotContent and bind it with VolumeSnapshot manually.\n+optional",
		"snapshotContentName": "SnapshotContentName binds the VolumeSnapshot object with the VolumeSnapshotContent\n+optional",
		"snapshotClassName":   "Name of the VolumeSnapshotClass used by the VolumeSnapshot. If not specified, a default snapshot class will\nbe used if it is available.\n+optional",
	}
}

func (VolumeSnapshotStatus) SwaggerDoc() map[string]string {
	return map[string]string{
		"":             "VolumeSnapshotStatus is the status of the VolumeSnapshot",
		"creationTime": "CreationTime is the time the snapshot was successfully created. If it is set,\nit means the snapshot was created; Otherwise the snapshot was not created.\n+optional",
		"restoreSize":  "When restoring volume from the snapshot, the volume size should be equal to or\nlarger than the RestoreSize if it is specified. If RestoreSize is set to nil, it means\nthat the storage plugin does not have this information available.\n+optional",
		"readyToUse":   "ReadyToUse is set to true only if the snapshot is ready to use (e.g., finish uploading if\nthere is an uploading phase) and also VolumeSnapshot and its VolumeSnapshotContent\nbind correctly with each other. If any of the above condition is not true, ReadyToUse is\nset to false\n+optional",
		"error":        "The last error encountered during create snapshot operation, if any.\nThis field must only be set by the entity completing the create snapshot\noperation, i.e. the external-snapshotter.\n+optional",
	}
}

func (VolumeSnapshotClass) SwaggerDoc() map[string]string {
	return map[string]string{
		"":               "VolumeSnapshotClass describes the parameters used by storage system when\nprovisioning VolumeSnapshots from PVCs.\nThe name of a VolumeSnapshotClass object is significant, and is how users can request a particular class.\n+genclient\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object",
		"snapshotter":    "Snapshotter is the driver expected to handle this VolumeSnapshotClass.",
		"parameters":     "Parameters holds parameters for the snapshotter.\nThese values are opaque to the system and are passed directly\nto the snapshotter.\n+optional",
		"deletionPolicy": "Optional: what happens to a snapshot content when released from its snapshot.\nThe default policy is Delete if not specified.\n+optional",
	}
}

func (VolumeSnapshotClassList) SwaggerDoc() map[string]string {
	return map[string]string{
		"":      "VolumeSnapshotClassList is a collection of snapshot classes.",
		"items": "Items is the list of VolumeSnapshotClasses",
	}
}

func (VolumeSnapshotContent) SwaggerDoc() map[string]string {
	return map[string]string{
		"":     "VolumeSnapshotContent represents the actual \"on-disk\" snapshot object",
		"spec": "Spec represents the desired state of the snapshot content",
	}
}

func (VolumeSnapshotContentList) SwaggerDoc() map[string]string {
	return map[string]string{
		"":      "VolumeSnapshotContentList is a list of VolumeSnapshotContent objects",
		"items": "Items is the list of VolumeSnapshotContents",
	}
}

func (VolumeSnapshotContentSpec) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                    "VolumeSnapshotContentSpec is the spec of the volume snapshot content",
		"volumeSnapshotRef":   "VolumeSnapshotRef is part of bi-directional binding between VolumeSnapshot\nand VolumeSnapshotContent. It becomes non-nil when bound.\n+optional",
		"persistentVolumeRef": "PersistentVolumeRef represents the PersistentVolume that the snapshot has been\ntaken from. It becomes non-nil when VolumeSnapshot and VolumeSnapshotContent are bound.\n+optional",
		"snapshotClassName":   "Name of the VolumeSnapshotClass used by the VolumeSnapshot. If not specified, a default snapshot class will\nbe used if it is available.\n+optional",
		"deletionPolicy":      "Optional: what happens to a snapshot content when released from its snapshot. It will be set to Delete by default\nif not specified\n+optional",
	}
}

func (VolumeSnapshotSource) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                        "VolumeSnapshotSource represents the actual location and type of the snapshot. Only one of its members may be specified.",
		"csiVolumeSnapshotSource": "CSI (Container Storage Interface) represents storage that handled by an external CSI Volume Driver (Alpha feature).\n+optional",
	}
}

func (CSIVolumeSnapshotSource) SwaggerDoc() map[string]string {
	return map[string]string{
		"":               "CSIVolumeSnapshotSource represents the source from CSI volume snapshot",
		"driver":         "Driver is the name of the driver to use for this snapshot.\nThis MUST be the same name returned by the CSI GetPluginName() call for\nthat driver.\nRequired.",
		"snapshotHandle": "SnapshotHandle is the unique snapshot id returned by the CSI volume\npluginâ€™s CreateSnapshot to refer to the snapshot on all subsequent calls.\nRequired.",
		"creationTime":   "Timestamp when the point-in-time snapshot is taken on the storage\nsystem. This timestamp will be generated by the CSI volume driver after\nthe snapshot is cut. The format of this field should be a Unix nanoseconds\ntime encoded as an int64. On Unix, the command `date +%s%N` returns\nthe  current time in nanoseconds since 1970-01-01 00:00:00 UTC.\nThis field is required in the CSI spec but optional here to support static binding.\n+optional",
		"restoreSize":    "When restoring volume from the snapshot, the volume size should be equal to or\nlarger than the RestoreSize if it is specified. If RestoreSize is set to nil, it means\nthat the storage plugin does not have this information available.\n+optional",
	}
}
